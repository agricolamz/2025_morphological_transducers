# Введение в `lexd`

## Техническое введение

В данном разделе мы обсуждаем синтаксис программы [`lexd`](https://github.com/apertium/lexd/blob/main/Usage.md) [@swanson21]. Данная программа работает в связке 

- с бесплатном програмном обеспечении с открытым исходным кодом Helsinki Finite-State Tookit `hfst` [@linden11];
- аналогичным инструментом от Apertium `lttoolbox` [@ortiz05].

Это консольная программа, работающая на юниксоподобных системах. Чтобы избежать сложностей на начальных этапах курса, мы решили вначале познакомиться с синтаксисом `lexd` и попробовать описывать разные языковые явления, не затрудняя всех установкой и запуском данных программ у себя на компьютере. В связи с этим мы предлагаем выучить следующие четыре команды, которые будут работать на операционных системах Linux, основанных на Debian/Ubuntu, и в Google Colab:

- `curl https://shorturl.at/0bBXE -o Makefile; make` --- скачиваем интсрукции для установки `lexd` и `hfst` и дальнейшей работы с ними, записанные в простом текстовом файле, которые можно прочитать, если открыть [ссылку](https://shorturl.at/0bBXE) из команды. Команда `make` запускает установку. Для того, чтобы это работало в Google Colab нужно перед командой нужно поставить восклицательный знак: `!curl https://shorturl.at/0bBXE -o Makefile; make`
- дальше мы ожидаем, что Вы создадите в коллабе или у себя на компьютере (если у вас Linux), файл с названием `task.lexd`. В Google Colab для этого достаточно вставить первой строкой кодового блока `%%writefile task.lexd`. Вот пример такого файла:

```
PATTERNS
VerbRoot VerbInfl

LEXICON VerbRoot
sing<v>:sing
walk<v>:walk
dance<v>:dance

LEXICON VerbInfl
<pres>:
<pres><3><sg>:s
```

- После того, как Вы установили нужные программы и создали файл, можно посмотреть формы и разборы, которые генерируются трансдьюссером. Это можно сделать следующей командой (не забудьте поставить восклицательный знак перед `make` в Google Colab):

```
make forms
```

- В ходе курса мы будем разбирать разные лингвистические задачи. У каждой задачи есть номер и автоматический тест, который его проверяет. Чтобы запустить автоматическую проверку следует ввести команду, где первое число -- номер раздела, а второе число -- номер задачи. Например, для того, чтобы проверить, работает ли проверка задания попробуйте запустить следующую команду:

```
make test_02_01
```

- Чтобы окончательно посмотреть все варианты, попробуйте изменить последнюю строчку файла `task.lexd` на `<pres><3><sg>:S` и снова перезапустить команду:

```
make test_02_01
```

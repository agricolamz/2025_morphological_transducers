# Введение в `lexd`

## Техническое введение

В данном разделе мы обсуждаем синтаксис программы [`lexd`](https://github.com/apertium/lexd/blob/main/Usage.md) [@swanson21]. Данная программа работает в связке 

- с бесплатном програмном обеспечении с открытым исходным кодом Helsinki Finite-State Tookit `hfst` [@linden11];
- аналогичным инструментом от Apertium `lttoolbox` [@ortiz05].

Это консольная программа, работающая на юниксоподобных системах. Чтобы избежать сложностей на начальных этапах курса, мы решили вначале познакомиться с синтаксисом `lexd` и попробовать описывать разные языковые явления, не затрудняя всех установкой и запуском данных программ у себя на компьютере. В связи с этим мы предлагаем выучить следующие четыре команды, которые будут работать на операционных системах Linux, основанных на Debian/Ubuntu, и в Google Colab:

- скачиваем интсрукции для установки `lexd` и `hfst` и дальнейшей работы с ними, записанные в простом текстовом файле, которые можно прочитать, если открыть [ссылку](https://shorturl.at/0bBXE) из команды. Команда `make` запускает установку. Для того, чтобы это работало в Google Colab нужно перед командой нужно поставить восклицательный знак: `!curl ...`. Знак доллара означает, что дальше следует команда командной строки, не надо его никуда копировать.

```{{bash}}
$ curl https://raw.githubusercontent.com/agricolamz/2025_morphological_transducers/refs/heads/main/task_tests/Makefile -o Makefile; make
```

- дальше мы ожидаем, что вы создадите в коллабе или у себя на компьютере (если у вас Linux), файл с названием `task.lexd`. В Google Colab для этого достаточно вставить первой строкой кодового блока `%%writefile task.lexd`. Вот пример такого файла:

```{{lexd}}
PATTERNS
VerbRoot VerbInfl

LEXICON VerbRoot
sing<v>:sing
walk<v>:walk
dance<v>:dance

LEXICON VerbInfl
<pres>:
<pres><3><sg>:s
```

- После того, как вы установили нужные программы и создали файл, можно посмотреть формы и разборы, которые генерируются трансдьюссером. Это можно сделать следующей командой (не забудьте поставить восклицательный знак перед `make` в Google Colab):

```{{bash}}
$ make forms

sing<v><pres>:sing
sing<v><pres><3><sg>:sings
walk<v><pres>:walk
walk<v><pres><3><sg>:walks
dance<v><pres>:dance
dance<v><pres><3><sg>:dances
```

- В ходе курса мы будем разбирать разные лингвистические задачи. У каждой задачи есть номер и автоматический тест, который его проверяет. Чтобы запустить автоматическую проверку следует ввести команду, где первое число -- номер раздела, а второе число -- номер задачи. Например, для того, чтобы проверить, работает ли проверка задания попробуйте запустить следующую команду:

```{{bash}}
$ make test_02_01
```

- Чтобы окончательно посмотреть все варианты, попробуйте изменить последнюю строчку файла `task.lexd` на `<pres><3><sg>:S` и снова перезапустить команду:

```{{bash}}
$ make test_02_01
```

## Программа `lexd`

У программы `lexd` есть подробный [туториал](https://github.com/apertium/lexd/blob/main/Usage.md), так что данный раздел во многом опирается на него. Давайте подробнее рассмотрим `lexd` файл, который мы видели в прошлом разделе:

```{{lexd}}
PATTERNS            # <1>
VerbRoot VerbInfl   

LEXICON VerbRoot    # <2>
sing<v>:sing        # <3>
walk<v>:walk
dance<v>:dance

LEXICON VerbInfl    # <4>
<pres>:             # <5>
<pres><3><sg>:s     # <6>
```

1. Обязательный раздел `PATTERNS`, в котором каждая строка сообщает, как могут соединяться элементы из разных групп лексикона.
2. Группа лексикона которая состоит из слова `LEXICON` и имя, под которым данная группа появляется в разделе `PATTERNS`
3. Наполнение группы. Первым идет разбор, а потом после двоеточия языковой материал. Морфологические теги принято записывать в треугольных скобках.
4. Вторая группа `LEXICON` и ее имя.
5. Пример нулевой морфемы.
6. Пример морфемы с несколькими морфологическими тегами.

Отметим, что можно создавать свои именнованные подразделы `PATTERN`, которые потом можно использовать в разделе `PATTERNS`.

::: {.callout-note}

###### Задание 02_02 

Ниже представлен фрагмент ицаринской (даргинские, нахско-дагестанские) парадигмы из [@sumbatova03]. Попробуйте смоделировать ее при помощи `lexd`. Для корректного моделирования формы sup.lat нужна морфонология, так что при моделировании используйте форму в скобках. При моделировании придется покривить душой: *-b* в формах ess и dir --- инфикс классного показателя. Помните, что каждый морфологический тег следует обрамлять в отдельные треугольные скобки, например, `sːika<n><ant><dir>:sːikasabal`. Для ориентации в нашем lexd файле 26 строк.

| форма    | козел                    | медведь                |
|----------|--------------------------|------------------------|
| abs      | _q’atsa_                 | _sːika_                |
| erg      | _q’atsal_                | _sːikal_               |
| gen      | _q’atsala_               | _sːikala_              |
| com      | _q’atsatsːilli_          | _sːikatsːilli_         |
| sup.lat  | _q’atsaj_ (< _q’atsaji_) | _sːikaj_ (< _sːikaji)_ |
| sup.ess  | _q’atsajib_              | _sːikajib_             |
| sup.dir  | _q’atsajibal_            | _sːikajibal_           |
| sup.el   | _q’atsajir_              | _sːikajir_             |
| sub.lat  | _q’atsaʁu_               | _sːikaʁu_              |
| sub.ess  | _q’atsaʁub_              | _sːikaʁub_             |
| sub.dir  | _q’atsaʁubal_            | _sːikaʁubal_           |
| sub.el   | _q’atsaʁur_              | _sːikaʁur_             |
| ant.lat  | _q’atsasa_               | _sːikasa_              |
| ant.ess  | _q’atsasab_              | _sːikasab_             |
| ant.dir  | _q’atsasabal_            | _sːikasabal_           |
| ant.el   | _q’atsasar_              | _sːikasar_             |
| post.lat | _q’atsaha_               | _sːikaha_              |
| post.ess | _q’atsahab_              | _sːikahab_             |
| post.dir | _q’atsahabal_            | _sːikahabal_           |
| post.el  | _q’atsahar_              | _sːikahar_             |
| in.lat   | _q’atsatsːi_             | _sːikatsːi_            |
| in.ess   | _q’atsatsːib_            | _sːikatsːib_           |
| in.dir   | _q’atsatsːibal_          | _sːikatsːibal_         |
| in.el    | _q’atsatsːir_            | _sːikatsːir_           |

:::

### Теги

::: {.callout-note}

###### Задание 02_03

Ниже представлен фрагмент финской парадигмы [@karlsson13], как видно, здесь слова двух словоизменительных типов. Попробуйте смоделировать представленную парадигму, используя теги.

| glosses   | зал       | общежитие     | дверь    | зима       |
|-----------|-----------|---------------|----------|------------|
| nom.sg    | _sali_    | _hostelli_    | _ovi_    | _talvi_    |
| acc.sg    | _sali_    | _hostelli_    | _ovi_    | _talvi_    |
| gen.sg    | _salin_   | _hostellin_   | _oven_   | _talven_   |
| prt.sg    | _salia_   | _hostellia_   | _ovea_   | _talvea_   |
| in.ess.sg | _salissa_ | _hostellissa_ | _ovessa_ | _talvessa_ |
| in.abl.sg | _salista_ | _hostellista_ | _ovesta_ | _talvesta_ |
| in.all.sg | _saliin_  | _hostelliin_  | _oveen_  | _talveen_  |
| at.ess.sg | _salilla_ | _hostellilla_ | _ovella_ | _talvella_ |
| at.abl.sg | _salilta_ | _hostellilta_ | _ovelta_ | _talvelta_ |
| at.all.sg | _salille_ | _hostellille_ | _ovelle_ | _talvelle_ |
| frml.sg   | _salina_  | _hostellina_  | _ovena_  | _talvena_  |
| trans.sg  | _saliksi_ | _hostelliksi_ | _oveksi_ | _talveksi_ |
| priv.sg   | _salitta_ | _hostellitta_ | _ovetta_ | _talvetta_ |

:::

### Операции в части Pattern

### Инфиксы
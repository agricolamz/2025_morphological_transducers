# –ú–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞

–ö–∞–∫ –∏ –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è, –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –Ω–∞–¥ –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞–º–∏ –Ω–∞–º –Ω—É–∂–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è –º–µ—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∂–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–∏–≤—à–µ–≥–æ—Å—è —Ç—Ä–∞–Ω—Å–¥—å—é—Å–µ—Ä–∞. –ú–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –¥–µ–ª–∞—Ç—å —ç—Ç–æ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–µ –Ω–µ–∫–æ—Ç–æ—Ä–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞. –í –∫–∞—á–µ—Å—Ç–≤–µ –∏–≥—Ä—É—à–µ—á–Ω–æ–≥–æ –ø—Ä–∏–º–µ—Ä–∞ –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º —Å–ª–µ–¥—É—é—â–∏–π –∫–æ—Ä–ø—É—Å, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ –ø–æ—Ä–æ—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–∏–∫–æ–º –ö–∏—Å—ã—á–µ–≤:

```{{shell}}
$ cat corpus.txt
```

```{r}
system("cat examples/08_corpus.txt", intern = TRUE) |> 
  cat(sep = "\n")
```

–î–ª—è —Ü–µ–ª–µ–π –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º —Å–ª–µ–¥—É—é—â–∏–π –∏–≥—Ä—É—à–µ—á–Ω—ã–π —Ç—Ä–∞–Ω—Å–¥—å—é—Å–µ—Ä:

```{{shell}}
$ cat example.lexd
```

```{r}
system("cat examples/08_example.lexd", intern = TRUE) |> 
  cat(sep = "\n")
```

–°–∫–æ–º–ø–∏–ª–∏—Ä—É–µ–º –Ω–∞—à —Ç—Ä–∞–Ω—Å–¥—å—é—Å–µ—Ä:

```{{shell}}
$ lexd example.lexd | hfst-txt2fst | hfst-invert | hfst-fst2fst -O -o analyzer.hfstol
```

```{r}
system("lexd examples/08_example.lexd | hfst-txt2fst | hfst-invert | hfst-fst2fst -O -o examples/analyzer.hfstol")
```

```{{shell}}
$ cat corpus.txt | hfst-proc -C analyzer.hfstol
```

```{r}
system("cat examples/08_corpus.txt | hfst-proc -C examples/analyzer.hfstol", intern = TRUE) |> 
  cat(sep = "\n")
```

–°—Ä–∞–∑—É –æ—Ç–º–µ—Ç–∏–º –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ –¥–∞–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–¥—å—é—Å–µ—Ä–∞:

-   –æ–Ω –Ω–µ —Ä–∞–∑–±–∏—Ä–∞–µ—Ç –≥–ª–∞–≥–æ–ª—ã;
-   –æ–Ω –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–∞–∑–±–æ—Ä –¥–ª—è —Å–∏–Ω—Ç–∞–≥–º—ã `–æ —Ä–æ—Å—Å–∏–∏`, –ø—Ä–∏–ø–∏—Å—ã–≤–∞—è —Å–ª–æ–≤—É *—Ä–æ—Å—Å–∏–∏* —Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂ –≤–º–µ—Å—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–Ω–æ–≥–æ;
-   –≤—Å–µ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –º—É–∂—Å–∫–æ–≥–æ —Ä–æ–¥–∞ –±—É–¥—É—Ç –∏–º–µ—Ç—å –ª–∏—à–Ω–∏–π —Ä–∞–∑–±–æ—Ä, —Ç–∞–∫ –∫–∞–∫ –≤ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–º —á–∏—Å–ª–µ –Ω–µ —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∏ –≤–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂–∏.

## –ü–æ–∫—Ä—ã—Ç–∏–µ

–ü–æ–∫—Ä—ã—Ç–∏–µ (coverage, na√Øve coverage) --- —ç—Ç–æ –ø—Ä–æ—Å—Ç–µ–π—à–∏–π —Å–ø–æ—Å–æ–± –æ—Ü–µ–Ω–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω—Å–¥—å—é—Å–µ—Ä–∞. –ï–≥–æ –≤—ã—Å—á–∏—Ç—ã–≤–∞—é—Ç –∫–∞–∫ –¥–æ–ª—é —Ñ–æ—Ä–º, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–∑–±–∏—Ä–∞–µ—Ç—Å—è —Ç—Ä–∞–Ω—Å–¥—å—é—Å–µ—Ä–æ–º. –ü–æ—Å—á–∏—Ç–∞–µ–º —Å–∫–æ–ª—å–∫–æ —Ç–æ–∫–µ–Ω–æ–≤ –≤—Å–µ–≥–æ –≤ –∫–æ—Ä–ø—É—Å–µ:

```{{shell}}
$ cat corpus.txt | wc -w
```

```{r}
system("cat examples/08_corpus.txt | wc -w", intern = TRUE) |> 
  cat(sep = "\n")
```

–ü–æ—Å—á–∏—Ç–∞–µ–º, —Å–∫–æ–ª—å–∫–æ —Ç–æ–∫–µ–Ω–æ–≤ –Ω–µ —Ä–∞–∑–±–∏—Ä–∞–µ—Ç —Ç—Ä–∞–Ω—Å–¥—å—é—Å–µ—Ä:

```{{shell}}
$ cat corpus.txt | hfst-proc -C analyzer.hfstol | grep -c "*"
```

```{r}
system('cat examples/08_corpus.txt | hfst-proc -C examples/analyzer.hfstol | grep -c "*"', intern = TRUE) |> 
  cat(sep = "\n")
```

–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –ø–æ–∫—Ä—ã—Ç–∏–µ –Ω–∞—à–µ–≥–æ —Ç—Ä–∞–Ω—Å–¥—å—é—Å–µ—Ä–∞ –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç $\frac{17-6}{17} \approx 0.65$. –ù–µ —Å—Ç–æ–∏—Ç —Å–∏–ª—å–Ω–æ –¥–æ–≤–µ—Ä—è—Ç—å —ç—Ç–æ–π –º–µ—Ä–µ, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ —Ä–∞–∑–±–æ—Ä–∞, —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –∑–∞–≤—ã—à–∞—è –∫–∞—á–µ—Å—Ç–≤–æ.

–ò–Ω–æ–≥–¥–∞ –≤–º–µ—Å—Ç–æ –æ–ø–∏—Å–∞–Ω–Ω–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è —Å—á–∏—Ç–∞—é—Ç –∞–Ω–∞–ª–æ–≥–∏—á–Ω—É—é –º–µ—Ä—É, —É–¥–∞–ª—è—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Ç–æ–∫–µ–Ω—ã –∏ —Ä–∞–∑–±–æ—Ä—ã, —á—Ç–æ–±—ã –Ω–µ –ø–æ–ª—É—á–∞–ª–æ—Å—å —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ —Ç—Ä–∞–Ω—Å–¥—å—é—Å–µ—Ä —Ä–∞–∑–±–∏—Ä–∞–µ—Ç —Å–∞–º—ã–µ —á–∞—Å—Ç–æ—Ç–Ω—ã–µ —Å–ª–æ–≤–∞. –í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ, –æ–ø–∏—Å–∞–Ω–Ω—É—é –≤—ã—à–µ –º–µ—Ä—É –Ω–∞–∑—ã–≤–∞—é—Ç coverage~1~, –∞ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º —ç—Ñ—Ñ–µ–∫—Ç–∞ —á–∞—Å—Ç–æ—Ç–Ω–æ—Å—Ç–∏ --- coverage~2~.

## –¢–æ—á–Ω–æ—Å—Ç—å –∏ –ø–æ–ª–Ω–æ—Ç–∞

–¢–æ—á–Ω–æ—Å—Ç—å (precision) –∏ –ø–æ–ª–Ω–æ—Ç–∞ (recall) --- –º–µ—Ç—Ä–∏–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø—Ä–∏ –æ—Ü–µ–Ω–∫–µ –±–æ–ª—å—à–µ–π —á–∞—Å—Ç–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ –º–∞—à–∏–Ω–Ω–æ–º –æ–±—É—á–µ–Ω–∏–∏. –ò–Ω–æ–≥–¥–∞ –∏—Ö –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Å–∞–º–∏ –ø–æ —Å–µ–±–µ, –∞ –∏–Ω–æ–≥–¥–∞ –≤ –≤–∏–¥–µ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä F~1~-–º–µ—Ä—ã. –ù–∞–ø–æ–º–Ω–∏–º, –∫–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –º–∞—Ç—Ä–∏—Ü–∞ –æ—à–∏–±–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ—Ç–æ—Ä–æ–π —Å—á–∏—Ç–∞—é—Ç—Å—è –º–µ—Ä—ã:

|        |                üêï                |             üêà             |
|:------:|:--------------------------------:|:--------------------------:|
| ü§ñüí≠üêï |    –∏—Å—Ç–∏–Ω–Ω–æ-–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ (TP)    |  –ª–æ–∂–Ω–æ-–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ (FP)  |
| ü§ñüí≠üêà | –ª–æ–∂–Ω–æ-–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã (FN) | –∏—Å—Ç–∏–Ω–Ω–æ-–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ (TN) |

::::: columns
::: column
$$—Ç–æ—á–Ω–æ—Å—Ç—å = \frac{TP}{TP+FP}$$
:::

::: column
$$–ø–æ–ª–Ω–æ—Ç–∞ = \frac{TP}{TP+FN}$$
:::
:::::

$$F_1 = 2\times\frac{—Ç–æ—á–Ω–æ—Å—Ç—å \times –ø–æ–ª–Ω–æ—Ç–∞}{—Ç–æ—á–Ω–æ—Å—Ç—å + –ø–æ–ª–Ω–æ—Ç–∞} = \frac{2\times TP}{2\times TP+FP+FN}$$

–í –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –∫ –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º—É –∞–Ω–∞–ª–∏–∑—É, –¥–∞–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –¥–æ–ª–∂–Ω—ã —É—á–∏—Ç—ã–≤–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Ä–∞–∑–±–æ—Ä–∞, –∞ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –Ω–∞–º –Ω—É–∂–Ω–æ –∑–∞–≤–µ—Å—Ç–∏ –∑–æ–ª–æ—Ç–æ–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç, —Å –∫–æ—Ç–æ—Ä—ã–º –º—ã –±—É–¥–µ–º —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å.

|               |                   \+                   |               \-               |
|:-------------:|:--------------------------------------:|:------------------------------:|
| ü§ñüí≠+         | —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∑–æ–ª–æ—Ç—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º (TP)    | –Ω–µ —Ä–∞–∑–æ–±—Ä–∞–Ω–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–º (FP) |
| ü§ñüí≠-         | –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∑–æ–ª–æ—Ç—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º (FN) |                                |

-   –¢–æ—á–Ω–æ—Å—Ç—å (precision) --- –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑–±–æ—Ä–æ–≤ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞, —Å–æ–≤–ø–∞–¥–∞—é—â–∏—Ö —Å —Ä–∞–∑–±–æ—Ä–æ–º –∑–æ–ª–æ—Ç–æ–≥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞ (TP), –¥–µ–ª–µ–Ω–Ω–æ–µ –Ω–∞ —Å—É–º–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–∞–∑–±–æ—Ä–æ–≤ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–º, —Å–æ–≤–ø–∞–¥–∞—é—â–∏—Ö —Å –∑–æ–ª–æ—Ç—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º, –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–µ —Ä–∞–∑–æ–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º (TP + FP).
-   –ü–æ–ª–Ω–æ—Ç–∞ (recall) --- –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑–±–æ—Ä–æ–≤ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞, —Å–æ–≤–ø–∞–¥–∞—é—â–∏—Ö —Å —Ä–∞–∑–±–æ—Ä–æ–º –∑–æ–ª–æ—Ç–æ–≥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞ (TP), –¥–µ–ª–µ–Ω–Ω–æ–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö —Ä–∞–∑–±–æ—Ä–æ–≤ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ (TP + FN).

–ö–∞–∫ —Ä–∞–∑–±–æ—Ä –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –º–æ–∂–µ—Ç —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å —Ä–∞–∑–±–æ—Ä–æ–º –∑–æ–ª–æ—Ç–æ–≥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞? –ú–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–ª—É—á–∞–∏ –ø–æ–ª–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è. –û–¥–Ω–∞–∫–æ —Ä–∞–∑—É–º–Ω—ã–º –∫–∞–∂–µ—Ç—Å—è —Å–º–æ—Ç—Ä–µ—Ç—å –∏ –Ω–∞ –¥—Ä—É–≥–∏–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è:

-   —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –æ—Å–Ω–æ–≤—ã
-   —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —á–∞—Å—Ç–µ—Ä–µ—á–Ω–æ–≥–æ —Ç–µ–≥–∞
-   —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–∞–±–æ—Ä–∞ –Ω–µ —á–∞—Å—Ç–µ—Ä–µ—á–Ω—ã—Ö —Ç–µ–≥–æ–≤
-   —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –æ—Å–Ω–æ–≤—ã –∏ —á–∞—Å—Ç–µ—Ä–µ—á–Ω–æ–≥–æ —Ç–µ–≥–∞
-   —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —á–∞—Å—Ç–µ—Ä–µ—á–Ω–æ–≥–æ —Ç–µ–≥–∞ –∏ –Ω–∞–±–æ—Ä–∞ –Ω–µ —á–∞—Å—Ç–µ—Ä–µ—á–Ω—ã—Ö —Ç–µ–≥–æ–≤

–ö—Ä–æ–º–µ —Ç–æ–≥–æ, –º–æ–∂–Ω–æ –µ—â–µ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ä–∞–±–æ—Ç—É –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞—Ç–æ—Ä–∞ (*—Ä—É–∫–∞–º–∏* \<-\> *—Ä—É–∫-–∞–º–∏*).

–í–æ—Ç –∫–∞–∫ –º–æ–∂–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–±–ª–∏—Ü–∞ —Å –∑–æ–ª–æ—Ç—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º. –Ø –Ω–∞–º–µ—Ä–µ–Ω–Ω–æ –≤–≤–µ–ª –Ω–µ—Å–æ—Å—Ç—ã–∫–æ–≤–∫–∏:

-   —Ç–µ–≥ `PRON` –≤–º–µ—Å—Ç–æ `PR`;
-   —Ñ–æ—Ä–º–∞ *–≥–ª–∞–≥–æ–ª* –∏–º–µ–µ—Ç –ª–∏—à—å –æ–¥–∏–Ω —Ç–µ–≥ `<a—Å—Å>`, –∞ —Ç–µ–≥ `<sg>` –ø—Ä–æ–ø—É—â–µ–Ω;
-   –≤ —Ñ–æ—Ä–º–µ *—Ä–∞—Å—Å–∫–∞–∑* –ø–µ—Ä–µ–ø—É—Ç–∞–Ω –ø–æ—Ä—è–¥–æ–∫ —Ç–µ–≥–æ–≤ (`sg, nom` –≤–º–µ—Å—Ç–æ `nom, sg`).

```{r}
library(tidyverse)
read_csv("examples/08_gold_standard.csv")
```

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞–º –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ –∫–∞–∫–æ–≥–æ-—Ç–æ –µ–¥–∏–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –±—ã –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–ª –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–µ—Ç—Ä–∏–∫–∏, –ø–æ—ç—Ç–æ–º—É –≤–æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–π –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç —ç—Ç–æ –¥–ª—è

-   –æ—Å–Ω–æ–≤;
-   —á–∞—Å—Ç–µ—Ä–µ—á–Ω—ã—Ö —Ç–µ–≥–æ–≤;
-   –Ω–µ —á–∞—Å—Ç–µ—Ä–µ—á–Ω—ã—Ö —Ç–µ–≥–æ–≤;
-   –≤—Å–µ–≥–æ –≤–º–µ—Å—Ç–µ.

–ï—Å–ª–∏ –±—É–¥–µ—Ç–µ –¥–µ–ª–∞—Ç—å —Å–∞–º–∏, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–µ—â–µ–π. –í–æ-–ø–µ—Ä–≤—ã—Ö, –∏–º–µ–µ—Ç —Å–º—ã—Å–ª –≤—ã–∫–∏–Ω—É—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–≥–∏. –í–æ-–≤—Ç–æ—Ä—ã—Ö, —Å–ª–µ–¥—É–µ—Ç –ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–µ—á–∞—Å—Ç–µ—Ä–µ—á–Ω—ã—Ö —Ç–µ–≥–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–µ—Ä–Ω—ã–º, –∞ –Ω–µ –æ—à–∏–±–∫–æ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ —Å–ª—É—á–∞–µ –ø—Ä–µ–¥–ª–æ–≥–æ–≤. –í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –Ω–µ —Å—Ç–æ–∏—Ç –≤–≤–æ–¥–∏—Ç—å —à—Ç—Ä–∞—Ñ –∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ç–µ–≥–æ–≤.

::: panel-tabset

### R

```{r}
#| echo: true

library(tidyverse)

gold_standard <- read_csv("examples/08_gold_standard.csv")

system("cat examples/08_corpus.txt | hfst-proc examples/analyzer.hfstol", intern = TRUE) |> 
  str_split(" ") |> 
  unlist() |> 
  enframe() |>
  rename(id = name) |> 
  mutate(token = str_extract(value, "(?<=\\^).*?(?=/)"),
         analysis = str_remove(value, "^.*?/"),
         analysis = str_remove(analysis, "\\$"),
         analysis = str_split(analysis, "/")) |> 
  unnest_longer(analysis) |> 
  mutate(unrecogonised = str_detect(analysis, "^\\*") |>  as.double(),
         stem_analyzed = str_remove_all(analysis, "<.*?>"),
         stem_analyzed = if_else(str_detect(stem_analyzed, "\\*"), "", stem_analyzed),
         stem_analyzed = if_else(is.na(stem_analyzed), "", stem_analyzed),
         pos_analyzed = str_extract(analysis, "(<N>)|(<V>)|(<PR>)|(<ADV>)|(<CONJ>)|(<PREP>)"),
         pos_analyzed = if_else(is.na(pos_analyzed), "", pos_analyzed),
         tags_analyzed = str_remove(analysis, pos_analyzed),
         tags_analyzed = str_remove(tags_analyzed, stem_analyzed),
         tags_analyzed = if_else(is.na(tags_analyzed), "", tags_analyzed),
         tags_analyzed = str_remove_all(tags_analyzed, "(^<)|(>$)"),
         pos_analyzed = str_remove_all(pos_analyzed, "[<>]"),
         tags_analyzed = map_chr(tags_analyzed, function(x) str_split(x, "><") |> unlist() |> unique() |> sort() |> str_c(collapse = ", "))) |> 
  select(id, token, stem_analyzed, pos_analyzed, tags_analyzed, unrecogonised) |> 
  left_join(gold_standard) |> 
  mutate(check_stem = as.double(stem == stem_analyzed),
         check_pos = as.double(pos == pos_analyzed),
         tags = map_chr(tags, function(x) str_split(x, ", ") |> unlist() |> unique() |> sort() |> str_c(collapse = ", ")),
         check_tags = as.double(tags == tags_analyzed),
         sum = check_stem + check_pos + check_tags,
         check_all = if_else(sum == 3, 1, 0)) ->
  result_df

result_df

result_df |> 
  summarise(stem_TP = sum(check_stem),
            stem_FP = sum(unrecogonised),
            stem_FN = if_else(check_stem == 0 & unrecogonised == 0, 1, 0) |> sum(),
            stem_precision = stem_TP/(stem_TP+stem_FP),
            stem_recall = stem_TP/(stem_TP+stem_FN),
            pos_TP = sum(check_pos),
            pos_FP = sum(unrecogonised),
            pos_FN = if_else(check_pos == 0 & unrecogonised == 0, 1, 0) |> sum(),
            pos_precision = pos_TP/(pos_TP+pos_FP),
            pos_recall = pos_TP/(pos_TP+pos_FN),
            all_TP = sum(check_all),
            all_FP = sum(unrecogonised),
            all_FN = if_else(check_all == 0 & unrecogonised == 0, 1, 0) |> sum(),
            all_precision = all_TP/(all_TP+all_FP),
            all_recall = all_TP/(all_TP+all_FN)) |> 
  pivot_longer(names_to = "type", values_to = "value", everything()) |> 
  separate(type, into = c("type", "measure")) |> 
  filter(measure %in% c("precision", "recall")) |> 
  pivot_wider(names_from = measure, values_from = value) |> 
  mutate(F1 = 2*(precision*recall)/(precision+recall))
```

### Python
:::

–ö–∞–∫ –∏ –≤ —Å–ª—É—á–∞–µ, –æ–ø–∏—Å–∞–Ω–Ω–æ–º –≤—ã—à–µ, –º–æ–∂–µ–Ω–æ —Ä–∞–∑–ª–∏—á–∞—Ç—å precision~1~, recall~1~ –∏ F~1~-–º–µ—Ä—É~1~ –∏ –∏—Ö –∞–Ω–∞–ª–æ–≥–∏ —Å —Å—É—Ñ–∏–∫—Å–æ–º ~2~, –µ—Å–ª–∏ —É–¥–∞–ª—è—Ç—å —ç—Ñ—Ñ–µ–∫—Ç —á–∞—Å—Ç–æ—Ç–Ω–æ—Å—Ç–∏.

```{r}
system('rm -f examples/*.hfstol')
```
